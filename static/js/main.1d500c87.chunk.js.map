{"version":3,"sources":["components/Steps/Form/Form.jsx","components/Steps/List/List.jsx","components/Steps/Steps.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["INITIONAL_FORM_STATE","date","distance","Form","onAdd","useState","form","setForm","onFieldChange","e","target","prev","name","value","className","htmlFor","id","onChange","type","onClick","preventDefault","match","isNaN","List","steps","onDelete","FormatedData","map","elem","split","formdate","Date","sort","a","b","getTime","step","defaultProps","Steps","setSteps","dateIndex","findIndex","el","Number","v4","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d500c87.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './Form.css';\nimport PropTypes from 'prop-types';\n\nconst INITIONAL_FORM_STATE = {\n   date: '',\n   distance: '',\n};\n\nexport default function Form({ onAdd }) {\n   const [form, setForm] = useState(INITIONAL_FORM_STATE);\n\n   function formatData() {\n      const valid = form.date.match(\n         /^([0]?[1-9]|[1|2][0-9]|[3][0|1])[.]([0]?[1-9]|[1][0-2])[.]([0-9]{4}|[0-9]{2})$/\n      );\n      if (!valid) {\n         return false;\n      }\n      return true;\n   }\n   const onFieldChange = (e) => {\n      const { target } = e;\n      setForm((prev) => ({\n         ...prev,\n         [target.name]: target.value,\n      }));\n   };\n\n   const onAddDistance = (e) => {\n      e.preventDefault();\n      const date = formatData();\n      // eslint-disable-next-line no-restricted-globals\n      if (!date || isNaN(form.distance) || form.distance === '') return;\n      onAdd(form);\n      setForm(INITIONAL_FORM_STATE);\n   };\n\n   return (\n      <form className=\"Steps-form\">\n         <div className=\"Steps-Field\">\n            <label htmlFor=\"date\" className=\"label\">\n               Дата (дд.мм.гг)\n            </label>\n            <input\n               className=\"Steps-Control\"\n               id=\"date\"\n               name=\"date\"\n               value={form.date}\n               onChange={onFieldChange}\n            />\n         </div>\n\n         <div className=\"Steps-Field\">\n            <label htmlFor=\"distance\" className=\"label\">\n               Пройдено км\n            </label>\n            <input\n               className=\"Steps-Control\"\n               id=\"distance\"\n               name=\"distance\"\n               value={form.distance}\n               onChange={onFieldChange}\n            />\n         </div>\n\n         <button\n            className=\"Form-button Form-Submit\"\n            type=\"submit\"\n            onClick={onAddDistance}\n         >\n            OK\n         </button>\n      </form>\n   );\n}\n\nForm.propTypes = {\n   onAdd: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './List.css';\nimport PropTypes from 'prop-types';\n\nexport default function List({ steps, onDelete }) {\n   const data = steps.map((elem) => {\n      const date = elem.date.split('.');\n      const formdate = new Date(date[2], date[1] - 1, date[0]);\n      return { ...elem, formdate };\n   });\n\n   const FormatedData = data.sort(\n      (a, b) => b.formdate.getTime() - a.formdate.getTime()\n   );\n\n   const onDeleteLine = (id) => () => {\n      onDelete(id);\n   };\n\n   return (\n      <div className=\"Steps-List\">\n         <div className=\"Steps-ListHeader\">\n            <div className=\"Steps-ListHeaderItem\">Дата</div>\n            <div className=\"Steps-ListHeaderItem\">Дистанция</div>\n         </div>\n\n         {FormatedData.map((step) => (\n            <div className=\"Steps-ListItem\" key={step.id}>\n               <div className=\"Steps-ListItemDate\">{step.date}</div>\n               <div className=\"Steps-ListItemDictance\">{step.distance}</div>\n               <button\n                  className=\"Form-button ListItem-delete\"\n                  type=\"submit\"\n                  onClick={onDeleteLine(step.id)}\n               >\n                  {' '}\n                  X{' '}\n               </button>\n            </div>\n         ))}\n      </div>\n   );\n}\n\nList.defaultProps = {\n   steps: [],\n};\n\nList.propTypes = {\n   steps: PropTypes.arrayOf(PropTypes.object),\n   onDelete: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport Form from './Form/Form';\nimport List from './List/List';\nimport './Steps.css';\n\nexport default function Steps() {\n   const [steps, setSteps] = useState([]);\n\n   const onAddDistance = (distance) => {\n      const dateIndex = steps.findIndex((el) => el.date === distance.date);\n      if (dateIndex !== -1) {\n         steps[dateIndex].distance =\n            Number(steps[dateIndex].distance) + Number(distance.distance);\n         setSteps((prev) => prev.map((step) => step));\n         return;\n      }\n      setSteps((prev) => [\n         ...prev,\n         {\n            ...distance,\n            id: v4(),\n         },\n      ]);\n   };\n\n   const onDelete = (id) => {\n      setSteps(() => steps.filter((el) => el.id !== id));\n   };\n\n   return (\n      <div className=\"Steps\">\n         <Form onAdd={onAddDistance} />\n         <List steps={steps} onDelete={onDelete} />\n      </div>\n   );\n}\n","import React from 'react';\nimport './App.css';\nimport Steps from './components/Steps/Steps';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <Steps />\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}